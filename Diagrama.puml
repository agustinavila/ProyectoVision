'Generador de UML utilizando plantUML

@startuml proyectoVision

abstract class feeder{
	Mat frame
	actualizarFrame()
	getFrame()
	registrarObservador()
	removerObservador()
	actualizarObservadores()
}

class frameLogger{
	Mat frame
	string nombreArchivo
	actualizar()
	guardarFrame()
}
feeder -> frameLogger

feeder->extractorLandmarks

abstract class extractorLandmarks{
	'debe definir todos los datos necesarios
	'y los metodos para extraer y registrar los datos

	vector<vector<float>> landmarks
	Mat frame
	actualizar()
	getLandmarks()
}

extractorLandmarks->normalizadorLandmarks

class normalizadorLandmarks{
	vector<vector<float>> landmarksOrig
	vector<vector<float>> landmarksNorm
	float angulo
	float escala
	float ancla
}

class analizadorSimetria{
array simetrias
calcularSimetria()
}

normalizadorLandmarks -> analizadorSimetria

@enduml

@startuml structs
class datoBase <<struct>>{
	'primer boceto de la estructura basica de cada frame
	'para hacer registro de los datos?

	Mat frame
	int numeroFrame
	string nombreArchivo
	double timestamp
	vector<vector<float>> features
	float ancla
	float angulo
	float escala
}
@enduml
@startuml feeder

abstract class feeder{
	Mat frame
	actualizarFrame()
	getFrame()
	registrarObservador()
	removerObservador()
	actualizarObservadores()
}

class videoFeeder{
	Mat frame
	string nombreArchivo
	abrirArchivo()
}
feeder<|--videoFeeder

class webcamFeeder{
	Mat frame
}
feeder<|--webcamFeeder

class kinectFeeder{
	'"tipoimagen" deberia servir para registrar RGB, IR o profundidad
	Mat frame
	array tipoimagen
	abrirArchivo()
}
feeder<|--kinectFeeder
@enduml

@startuml extractorLandmarks
abstract class extractorLandmarks{
	'debe definir todos los datos necesarios
	'y los metodos para extraer y registrar los datos

	vector<vector<float>> landmarks
	Mat frame
	actualizar()
	getLandmarks()
}
note left of extractorLandmarks
Debe proveerse un archivo 
de entrenamiento para el extractor
end note

class extractorLandmarksOpenCV{
implementacion del extractor con openCV
}
extractorLandmarks<|-- extractorLandmarksOpenCV
extractorLandmarks<|-- extractorLandmarksDlib
class extractorLandmarksDlib{
implementacion del extractor con dlib
}
@enduml