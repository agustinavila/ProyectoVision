digraph "AnalizadorSimetria"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="AnalizadorSimetria",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Clase principal del programa."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptrLandmarksLogger" ,fontname="Helvetica"];
  Node2 [label="LandmarksLogger",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_landmarks_logger.html",tooltip="Clase para guardar los landmarks. Por defecto genera un video."];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" log_file_name_" ,fontname="Helvetica"];
  Node3 [label="std::string",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="std::basic_string\<\l char \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node5 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptrExtractor" ,fontname="Helvetica"];
  Node5 [label="ExtractorLandmarks",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_extractor_landmarks.html",tooltip="Clase abstracta para extraer landmarks de un Mat."];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" landmarks" ,fontname="Helvetica"];
  Node6 [label="std::vector\< Landmarks \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node7 [label="Landmarks",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_landmarks.html",tooltip="Estructura para almacenar los landmarks, discriminados segun rasgo facial."];
  Node8 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" cejaIzq\nnariz\nboca\ncejaDer\nmenton\nojoDer\nojoIzq" ,fontname="Helvetica"];
  Node8 [label="std::vector\< Point2f \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" landmarksNorm\nlandmarks" ,fontname="Helvetica"];
  Node9 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptrFeeder" ,fontname="Helvetica"];
  Node9 [label="Feeder",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_feeder.html",tooltip="Clase abstracta para proveer obtener nuevos mats."];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" nombreVideoFeeder\nnombreFrameLogger\nnombreModeloDlib\nnombreCascadeOpenCV\nnombreConf\nnombreLandmarksLogger\nnombreLBFOpenCV" ,fontname="Helvetica"];
  Node10 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" analizadorLandmarks" ,fontname="Helvetica"];
  Node10 [label="AnalizadorLandmarks",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_analizador_landmarks.html",tooltip="Clase que maneja los metodos para analizar los landmarks."];
  Node6 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" landmarksNorm\nlandmarks" ,fontname="Helvetica"];
  Node11 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptrVideoLogger" ,fontname="Helvetica"];
  Node11 [label="FrameLogger",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_frame_logger.html",tooltip="Clase para guardar los frames. Por defecto genera un video."];
  Node3 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" video_file_name_" ,fontname="Helvetica"];
}
